<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  <icon>http://example.com/icon.png</icon>
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-07-29T04:16:23.403Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo Cactus 主题深度美化与定制指南</title>
    <link href="http://example.com/2025/07/29/Hexo%20Cactus%20%E4%B8%BB%E9%A2%98%E6%B7%B1%E5%BA%A6%E7%BE%8E%E5%8C%96%E4%B8%8E%E5%AE%9A%E5%88%B6%E6%8C%87%E5%8D%97/"/>
    <id>http://example.com/2025/07/29/Hexo%20Cactus%20%E4%B8%BB%E9%A2%98%E6%B7%B1%E5%BA%A6%E7%BE%8E%E5%8C%96%E4%B8%8E%E5%AE%9A%E5%88%B6%E6%8C%87%E5%8D%97/</id>
    <published>2025-07-29T06:30:00.000Z</published>
    <updated>2025-07-29T04:16:23.403Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>部署好 Hexo 博客之后，我陷入了典型的选择困难症。<br>好看的主题实在太多了：NexT 功能丰富、Butterfly 炫酷灵动，网上教程也铺天盖地，按理说应该是省心之选。但用了一圈之后，我发现这些主题虽然强大，却略显复杂，配置项繁多，而且走在“撞脸”的边缘——打开十篇博客，九个长得一样。</p><p>我不想要千篇一律的模板感，更希望拥有一个<strong>简洁、独特、真正属于自己的数字角落</strong>。几经尝试与权衡，我最终选择了 <strong>Cactus（仙人掌）</strong> 主题 （<a href="https://github.com/probberechts/hexo-theme-cactus">Cactus 主题 GitHub 仓库 </a>｜<a href="https://probberechts.github.io/hexo-theme-cactus/">官方 Demo 预览 </a>）—— 一个极简主义者的理想之选。Cactus 提供了四种清新的配色方案，整体风格干净利落，没有冗余的装饰，非常适合个人写作与轻量博客。</p><p>但它的简洁也意味着功能有限，中文教程稀少，许多个性化需求——如添加社交链接、集成 Utterances 评论、优化 SEO 等——都需要自行实现。因此，写下这篇教程，记录我如何一步步将 Cactus 从“极简”变为“既简且美”的专属博客。</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/29/33f2849655188a2841d7bc6b37e1e897-395ed0c7.webp" alt="image-20220119164127894"></p><h2 id="Cactus-主题安装"><a href="#Cactus-主题安装" class="headerlink" title="Cactus 主题安装"></a>Cactus 主题安装</h2><p>进入hexo所在的文件夹，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b main https://github.com/probberechts/hexo-theme-cactus.git themes/cactus</span><br></pre></td></tr></table></figure><p>然后在<code>./_config.yml</code>中修改<code>theme</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># theme: landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">cactus</span></span><br></pre></td></tr></table></figure><h2 id="切换主题的风格"><a href="#切换主题的风格" class="headerlink" title="切换主题的风格"></a>切换主题的风格</h2><p>前面提到了cactus主题有四个风格，切换风格只需要进入<code>./themes/cactus/_config.yml</code>中找到<code>colorscheme</code>修改就完事，注意每次修改完都需要<code>hexo clean</code> <code>hexo g </code>才会生效</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set the color scheme.</span></span><br><span class="line"><span class="comment"># Available color schemes are &#x27;dark&#x27;, &#x27;light&#x27;, &#x27;classic&#x27; and &#x27;white&#x27;.</span></span><br><span class="line"><span class="comment"># Alternatively, add your own custom color scheme to source/css/_colors.</span></span><br><span class="line"><span class="attr">colorscheme:</span> <span class="string">dark</span></span><br></pre></td></tr></table></figure><h2 id="导航栏相关"><a href="#导航栏相关" class="headerlink" title="导航栏相关"></a>导航栏相关</h2><h3 id="新建一个导航栏的项"><a href="#新建一个导航栏的项" class="headerlink" title="新建一个导航栏的项"></a>新建一个导航栏的项</h3><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/29/46ae1c45c156abfab2cfc89c417d80e7-a8dc5e70.webp" alt="image-20220119171740127"></p><ul><li>在<code>./themes/cactus/_config.yml</code>找到<code>nav</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span></span><br><span class="line">  <span class="attr">articles:</span> <span class="string">/archives/</span></span><br><span class="line">  <span class="attr">projects:</span> <span class="string">http://github.com/probberechts</span></span><br><span class="line">  <span class="attr">LINK_NAME:</span> <span class="string">URL</span></span><br></pre></td></tr></table></figure><p> 直接在nav下面添加就行，添加完这一项之后可以让它指向一个链接（例如projcets），也可以让它指向站内的一个页面。新建一个页面执行<code>hexo new page xxx</code>，然后这个页面的路径就是<code>/xxx/</code></p><ul><li>更新后会在<code>./themes/cactus/source</code>中发现一个和page名称一样的文件夹</li></ul><h3 id="让导航栏中的某一项显示内容在首页"><a href="#让导航栏中的某一项显示内容在首页" class="headerlink" title="让导航栏中的某一项显示内容在首页"></a>让导航栏中的某一项显示内容在首页</h3><p>以project为例，只需在<code>./themes/cactus/source</code>中创建<code>/_data/projects.json</code>，然后修改json文件为</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">       <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Hexo&quot;</span><span class="punctuation">,</span></span><br><span class="line">       <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://hexo.io/&quot;</span><span class="punctuation">,</span></span><br><span class="line">       <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span><span class="string">&quot;A fast, simple &amp; powerful blog framework&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">       <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Font Awesome&quot;</span><span class="punctuation">,</span></span><br><span class="line">       <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;http://fontawesome.io/&quot;</span><span class="punctuation">,</span></span><br><span class="line">       <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span><span class="string">&quot;The iconic font and CSS toolkit&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h3 id="在导航栏添加搜索功能"><a href="#在导航栏添加搜索功能" class="headerlink" title="在导航栏添加搜索功能"></a>在导航栏添加搜索功能</h3><ul><li><p>首先执行下面命令安装 <strong>hexo-generator-search</strong> 插件；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></li></ul><ul><li>执行<code>hexo new page search</code>，进入<code>./themes/cactus/source/serch/index.md</code>，修改md文件的头为</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Search</span><br><span class="line">type: search</span><br><span class="line"><span class="section">date: 2025-07-28 22:07:52</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><ul><li>在<code>./themes/cactus/_config.yml</code>中找到<code>nav</code> 新建search标签</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="attr">search:</span> <span class="string">/search/</span></span><br></pre></td></tr></table></figure><p>更新之后进入网站，点击search就可以搜索了</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/29/cb003f96a8a6cccca117aa5fc0ab5fa2-d16945fd.webp" alt="image-20220119172956786"></p><h2 id="新增标签功能"><a href="#新增标签功能" class="headerlink" title="新增标签功能"></a>新增标签功能</h2><ul><li><p>只需要在每篇文章的头部添加，每篇文章可以有两个tag，tag的顺序影响其重要程度。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: Tags and Categories</span><br><span class="line">date: 2017-12-24 23:29:53</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> Foo</span><br><span class="line"><span class="bullet">  -</span> Bar</span><br></pre></td></tr></table></figure></li></ul><p> 就可以在首页看到</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/29/7f6fca2a6d0a2e5398cd86df2ddce550-8ecc0d7a.webp" alt="Snipaste_2025-07-29_10-19-58"></p><h2 id="开启评论功能"><a href="#开启评论功能" class="headerlink" title="开启评论功能"></a>开启评论功能</h2><p>Cactus 支持 Disqus 和 Utterances 两个平台的评论功能，只需要在<code>./themes/cactus/_config.yml</code>分别找到它们就行。</p><p>以 Utterances 为例，把enable设置为true，然后按照下面步骤执行：</p><ol><li><p>登录 GitHub，创建一个<strong>新的公开 (Public) 仓库</strong>；</p></li><li><p>然后再去<a href="https://utteranc.es/">Utterances官网</a>，点击 <strong>“Install the app”</strong> 按钮，安装 Utterances 应用到这个新仓库**。</p><p>注意：在权限页面，选择 <strong>“Only select repositories”</strong>。</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fill in your Utterances data to enable Utterances comments</span></span><br><span class="line"><span class="attr">utterances:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">用户名/仓库名</span></span><br><span class="line">  <span class="attr">issue_term:</span> <span class="string">pathname</span></span><br><span class="line">  <span class="attr">label:</span> <span class="string">Comment</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">github-dark</span></span><br></pre></td></tr></table></figure><p>之后就能愉快的评论了，不过Disqus现在好像必须要梯子才能正常使用。</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/29/bfb35355e3d60e166481b79659419e79-1c82ecd1.webp" alt="Snipaste_2025-07-29_10-36-31"></p><h2 id="添加其他社交平台链接"><a href="#添加其他社交平台链接" class="headerlink" title="添加其他社交平台链接"></a>添加其他社交平台链接</h2><p>在<code>./themes/cactus/_config.yml</code>搜索<code>Social media links</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social_links:</span></span><br><span class="line">  <span class="attr">github:</span> <span class="string">your-github-url</span></span><br><span class="line">  <span class="attr">twitter:</span> <span class="string">your-twitter-url</span></span><br><span class="line">  <span class="attr">NAME:</span> <span class="string">your-NAME-url</span></span><br></pre></td></tr></table></figure><p>然后前面就是社交平台的名称，后面就是你该社交平台的url，注意这里只能选<a href="https://fontawesome.com/v5.15/icons?d=gallery&p=2">Font awesome</a>上有的icon，才会显示对应的icon，进入网站搜索社交平台的英文名就能看到是否有这个icon了，这里列出几个比较常见的：<code>weibo</code> <code>weixin</code> <code>zhihu</code> <code>rss</code>。</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/29/0e491de19eb07cc8160426e0671d3796-401d2de9.webp" alt="image-20220119181130127"></p><h2 id="增加数据分析"><a href="#增加数据分析" class="headerlink" title="增加数据分析"></a>增加数据分析</h2><p>在<code>./themes/cactus/_config.yml</code>中，搜索<code>analytics</code>，cactus支持以下几种数据分析功能，说白了就是后台管理。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">google_analytics:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">&#x27;UA-49627206-1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">baidu_analytics:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">2e6da3c375c8a87f5b664cea6d4cb29c</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cloudflare_analytics:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">0dabb6e21848405483a237e6a7b6ed04</span></span><br><span class="line"></span><br><span class="line"><span class="attr">umami_analytics:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">e77e68be-f6e4-4br3-9365-2b76b57cd571</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">https://analytics.domain.com</span></span><br></pre></td></tr></table></figure><p>以百度分析为统计，先去<a href="https://tongji.baidu.com/web/38068506/welcome/login">百度统计官网</a>注册一个账号，然后在网站列表点击<code>新增网站</code>，填写相关信息</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/29/b330ce630a17fb5cc6d2c4efadaf4f7c-c7ccc2cd.webp" alt="image-20220119182152990"></p><p>然后在<code>代码管理-&gt;代码获取</code>页面复制这一段，这就是你的<code>tracking_id</code>，粘贴到主题配置文件。</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/29/c10ee543e3045f762770d82d74b8c102-05ea5501.webp" alt="image-20220119182521144"></p><p>然后回到<code>./themes/cactus/_config.yml</code>，修改这里的<code>id</code>，<code>enabled</code>设置为<code>true</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_analytics:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">2e6da3c375c8a87f5b664cea6d4cb29c</span></span><br></pre></td></tr></table></figure><p>进入百度统计的<code>代码管理-&gt;代码安装检查</code>，点击<code>开始检查</code>，如果显示代码安装正确，过一会就能显示你网站统计的数据了。</p><h2 id="自定义字体-颜色和网站logo-icon"><a href="#自定义字体-颜色和网站logo-icon" class="headerlink" title="自定义字体&#x2F;颜色和网站logo&#x2F;icon"></a>自定义字体&#x2F;颜色和网站logo&#x2F;icon</h2><h3 id="自定义颜色"><a href="#自定义颜色" class="headerlink" title="自定义颜色"></a>自定义颜色</h3><p>进入<code>./themes/cactus/source/css/colors</code>中有四个文件，对应不同风格的样式</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/29/bd113d261609bcbc70233c3cbb816d5d-9cfca0eb.webp" alt="image-20220119183134175"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$color</span>-<span class="attribute">background</span> = <span class="number">#1d1f21</span></span><br><span class="line"><span class="variable">$color</span>-footer-mobile-<span class="number">1</span> = <span class="built_in">lighten</span>(<span class="variable">$color</span>-<span class="attribute">background</span>, <span class="number">2%</span>)</span><br><span class="line"><span class="variable">$color</span>-footer-mobile-<span class="number">2</span> = <span class="built_in">lighten</span>(<span class="variable">$color</span>-<span class="attribute">background</span>, <span class="number">10%</span>)</span><br><span class="line"><span class="variable">$color</span>-<span class="attribute">background</span>-code = <span class="built_in">lighten</span>(<span class="variable">$color</span>-background, <span class="number">2%</span>)</span><br><span class="line"><span class="variable">$color</span>-<span class="attribute">border</span> = <span class="number">#908d8d</span></span><br><span class="line"><span class="variable">$color</span>-meta = <span class="number">#908d8d</span></span><br><span class="line"><span class="variable">$color</span>-meta-<span class="selector-tag">code</span> = <span class="number">#908d8d</span></span><br><span class="line"><span class="variable">$color</span>-link = <span class="built_in">rgba</span>(<span class="number">212</span>, <span class="number">128</span>, <span class="number">170</span>, <span class="number">1</span>)</span><br><span class="line"><span class="variable">$color</span>-<span class="selector-tag">text</span> = <span class="number">#c9cacc</span>      <span class="comment">//正文</span></span><br><span class="line"><span class="variable">$color</span>-accent-<span class="number">3</span> = <span class="number">#cccccc</span>  <span class="comment">//副副标题</span></span><br><span class="line"><span class="variable">$color</span>-accent-<span class="number">2</span> = <span class="number">#eeeeee</span>  <span class="comment">//副标题</span></span><br><span class="line"><span class="variable">$color</span>-accent-<span class="number">1</span> = <span class="number">#ff6a00</span>  <span class="comment">//主标题</span></span><br><span class="line"><span class="variable">$color</span>-<span class="selector-tag">quote</span> = <span class="number">#ccffb6</span></span><br><span class="line"><span class="variable">$highlight</span> = <span class="built_in">hexo-config</span>(<span class="string">&quot;highlight&quot;</span>) || <span class="string">&quot;rainbow&quot;</span></span><br></pre></td></tr></table></figure><h3 id="自定义字体"><a href="#自定义字体" class="headerlink" title="自定义字体"></a>自定义字体</h3><p>进入<code>./themes/cactus/source/css/_variables.styl</code>，就可以修改字体了</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Fonts</span></span><br><span class="line"><span class="variable">$font</span>-family-<span class="selector-tag">body</span> = <span class="string">&quot;Menlo&quot;</span>, <span class="string">&quot;Meslo LG&quot;</span>, monospace</span><br><span class="line"><span class="variable">$font</span>-family-mono = <span class="string">&quot;Menlo&quot;</span>, <span class="string">&quot;Meslo LG&quot;</span>, monospace</span><br><span class="line"><span class="variable">$font</span>-size = <span class="number">14px</span></span><br><span class="line"><span class="variable">$line</span>-<span class="attribute">height</span> = <span class="number">1.725</span></span><br><span class="line"><span class="variable">$page</span>-<span class="attribute">width</span> = <span class="number">0rem</span> + (<span class="built_in">hexo-config</span>(<span class="string">&quot;page_width&quot;</span>) || <span class="number">39</span>)</span><br><span class="line"><span class="comment">// Logo</span></span><br><span class="line"><span class="variable">$logo</span>-<span class="attribute">width</span> = <span class="number">0px</span> + (<span class="built_in">hexo-config</span>(<span class="string">&quot;logo.width&quot;</span>) || <span class="number">0</span>)</span><br><span class="line"><span class="variable">$logo</span>-<span class="attribute">height</span> = <span class="number">0px</span> + (<span class="built_in">hexo-config</span>(<span class="string">&quot;logo.height&quot;</span>) || <span class="number">0</span>)</span><br><span class="line"><span class="variable">$logo</span>-grayout = <span class="built_in">hexo-config</span>(<span class="string">&quot;logo.grayout&quot;</span>) || false</span><br><span class="line"><span class="comment">// Colors</span></span><br><span class="line"><span class="variable">$colors</span> = <span class="built_in">hexo-config</span>(<span class="string">&quot;colorscheme&quot;</span>) || <span class="string">&quot;dark&quot;</span></span><br></pre></td></tr></table></figure><p>可用的字体在<code>./themes/cactus/source/lib/</code>中，cactus自带的只有<code>meslo-LG</code> <code>vazir-font</code>两种，有需要可以自己下载。</p><h3 id="自定义网站-logo-icon"><a href="#自定义网站-logo-icon" class="headerlink" title="自定义网站 logo&#x2F;icon"></a>自定义网站 logo&#x2F;icon</h3><ul><li>在<code>./themes/cactus/source/images/</code>下有四张图片</li></ul><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/29/55ed893b2640ddcf184e34d639796a2d-d2c2f630.png" alt="image-20220119184002386"></p><ul><li><p><code>apple-touch-icon</code>是苹果产品将网站的快捷方式添加到主屏幕所显示的logo</p></li><li><p>logo 就是显示在你网页上的那个东西，<a href="https://www.designevo.com/logo-maker/">设计logo的网站</a>，里面有很多半成品，拿来就能用。</p></li></ul><h2 id="添加点击量功能"><a href="#添加点击量功能" class="headerlink" title="添加点击量功能"></a>添加点击量功能</h2><p>进入<code>./themes/cactus/_config.yml</code>添加下面一段代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否开启访问量统计功能(不蒜子)</span></span><br><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line"> <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>进入<code>./themes/cactus/layout/_partial/footer.ejs</code>将其全部修改覆盖为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">ejs<span class="tag">&lt;<span class="name">footer</span> <span class="attr">id</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-left&quot;</span>&gt;</span></span><br><span class="line">        &lt;%= __(&#x27;footer.copyright&#x27;) %&gt; <span class="symbol">&amp;copy;</span></span><br><span class="line">        &lt;% var endYear = (theme.copyright &amp;&amp; theme.copyright.end_year) ? theme.copyright.end_year : new Date().getFullYear() %&gt;</span><br><span class="line">        &lt;% var startYear = (theme.copyright &amp;&amp; theme.copyright.start_year) ? theme.copyright.start_year : new Date().getFullYear() %&gt;</span><br><span class="line">        &lt;%= startYear &gt;= endYear ? endYear : startYear + &quot;-&quot; + endYear %&gt;</span><br><span class="line">        &lt;%= config.author || config.title %&gt;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-right&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            &lt;% for (var i in theme.nav) &#123; %&gt;<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">          --&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- url_for(theme.nav[i]) %&gt;&quot;</span>&gt;</span>&lt;%= __(&#x27;nav.&#x27;+i).replace(&quot;nav.&quot;, &quot;&quot;) %&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        --&gt;</span>&lt;% &#125; %&gt;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            &lt;% if (theme.busuanzi &amp;&amp; theme.busuanzi.enable)&#123; %&gt;</span><br><span class="line">              <span class="comment">&lt;!-- 不蒜子统计 --&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span></span><br><span class="line">                  本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line">              <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_container_site_uv&quot;</span> <span class="attr">style</span>=<span class="string">&#x27;display:none&#x27;</span>&gt;</span></span><br><span class="line">                      本站访客数<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>人</span><br><span class="line">              <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            &lt;% &#125; %&gt;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有前端基础的可以加在footer的别的位置甚至加在header.ejs里，核心代码就是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.busuanzi &amp;&amp; theme.busuanzi.enable)&#123; %&gt;</span><br><span class="line">              <span class="comment">&lt;!-- 不蒜子统计 --&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span></span><br><span class="line">                  本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line">              <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_container_site_uv&quot;</span> <span class="attr">style</span>=<span class="string">&#x27;display:none&#x27;</span>&gt;</span></span><br><span class="line">                      本站访客数<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>人</span><br><span class="line">              <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>效果如下所示：</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/29/ce5d219907054b65042da01e8fb49a0f-edc9edf7.webp" alt="image-20220119191035534"></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://github.com/probberechts/hexo-theme-cactus">probberechts&#x2F;hexo-theme-cactus: :cactus: A responsive, clean and simple theme for Hexo.</a></li><li><a href="https://reinhart-l.cn/2022/01/19/%E4%BD%BF%E7%94%A8hexo%E5%9F%BA%E4%BA%8Ecactus%E4%BB%99%E4%BA%BA%E6%8E%8C%E4%B8%BB%E9%A2%98%E6%9C%80%E5%85%A8%E7%BE%8E%E5%8C%96%E5%AE%A2%E5%88%B6%E6%95%99%E7%A8%8B/">使用hexo基于cactus仙人掌主题最全美化客制教程</a></li></ul>]]></content>
    
    
    <summary type="html">这篇文章介绍了如何使用 Hexo 搭建博客并深度定制 Cactus 主题，涵盖安装配置、界面美化、功能扩展（如评论系统与访问统计）等全流程，帮助用户打造一个简洁且个性化的个人博客。</summary>
    
    
    
    <category term="博客相关" scheme="http://example.com/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="Cactus" scheme="http://example.com/tags/Cactus/"/>
    
    <category term="配置" scheme="http://example.com/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>使用一台电脑管理两个 GitHub 账号的 Hexo 博客完整指南</title>
    <link href="http://example.com/2025/07/25/%E4%BD%BF%E7%94%A8%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E7%AE%A1%E7%90%86%E4%B8%A4%E4%B8%AA%20GitHub%20%E8%B4%A6%E5%8F%B7%E7%9A%84%20Hexo%20%E5%8D%9A%E5%AE%A2%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/"/>
    <id>http://example.com/2025/07/25/%E4%BD%BF%E7%94%A8%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E7%AE%A1%E7%90%86%E4%B8%A4%E4%B8%AA%20GitHub%20%E8%B4%A6%E5%8F%B7%E7%9A%84%20Hexo%20%E5%8D%9A%E5%AE%A2%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/</id>
    <published>2025-07-24T16:00:00.000Z</published>
    <updated>2025-07-25T15:44:39.173Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用一台电脑管理两个-GitHub-账号的-Hexo-博客完整指南"><a href="#使用一台电脑管理两个-GitHub-账号的-Hexo-博客完整指南" class="headerlink" title="使用一台电脑管理两个 GitHub 账号的 Hexo 博客完整指南"></a>使用一台电脑管理两个 GitHub 账号的 Hexo 博客完整指南</h1><h2 id="1-事前准备"><a href="#1-事前准备" class="headerlink" title="1. 事前准备"></a>1. 事前准备</h2><ol><li><strong>域名</strong>（<strong>非必须</strong>）：你可以使用免费的 <code>GitHub.io</code> 分配的域名。</li><li><strong>GitHub</strong>（<strong>必须</strong>）：<ul><li>注册两个 GitHub 账号：<ul><li>第一个账号：用户名 <code>user1</code>，邮箱 <code>account_one@example.com</code>。</li><li>第二个账号：用户名 <code>user2</code>，邮箱 <code>account_two@example.com</code>。</li></ul></li><li>假设你已经注册并可以登录这两个账号。</li></ul></li><li><strong>Cloudflare</strong>（<strong>非必须</strong>）：可用于加速博客访问。</li><li>事先安装好了 <strong><a href="https://nodejs.org/en/download/">Node</a></strong>、<strong><a href="https://git-scm.com/downloads">Git</a></strong>、**<a href="https://www.bing.com/search?q=vscode&qs=n&form=QBRE&sp=-1&lq=0&pq=vs%27co%27de&sc=12-8&sk=&cvid=E96E712CFE774E6F9256B5CC6A37CEC8">VScode</a>**等软件，可以参考<a href="https://www.youtube.com/watch?v=GtYcFZ55GJI&t=1s&ab_channel=CM%E5%96%82%E9%A5%AD%E5%B9%B2%E8%B4%A7%E6%BB%A1%E6%BB%A1">【Hexo博客系列】No.1 搭建Hexo博客，快速简洁高效，零成本搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南 #blog - YouTube</a></li></ol><hr><h2 id="2-配置-Git-和连接第一个-GitHub-账号-user1-account-one-example-com"><a href="#2-配置-Git-和连接第一个-GitHub-账号-user1-account-one-example-com" class="headerlink" title="2. 配置 Git 和连接第一个 GitHub 账号 (user1 - account_one@example.com)"></a>2. 配置 Git 和连接第一个 GitHub 账号 (<code>user1</code> - <code>account_one@example.com</code>)</h2><p>我们将首先配置与第一个 GitHub 账号相关的设置。</p><h3 id="2-1-配置第一个账号的用户名和邮箱（全局）"><a href="#2-1-配置第一个账号的用户名和邮箱（全局）" class="headerlink" title="2.1 配置第一个账号的用户名和邮箱（全局）"></a>2.1 配置第一个账号的用户名和邮箱（全局）</h3><p>打开 <code>Git Bash</code>，执行以下命令设置 Git 的全局用户信息（关联第一个 GitHub 账号），通过 <code>git config -l</code> 检查是否配置成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;user1&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;account_one@example.com&quot;</span></span><br></pre></td></tr></table></figure><ul><li><strong>注意</strong>：这里的 <code>user.name</code> 设置为你的第一个 GitHub 用户名（<code>user1</code>）。<code>user.email</code> 必须是你第一个 GitHub 账号设置中的 Primary email address。</li></ul><h3 id="2-2-为第一个账号生成并配置-SSH-密钥"><a href="#2-2-为第一个账号生成并配置-SSH-密钥" class="headerlink" title="2.2 为第一个账号生成并配置 SSH 密钥"></a>2.2 为第一个账号生成并配置 SSH 密钥</h3><ol><li><p>在 <code>Git Bash</code>中执行以下命令生成 SSH 密钥对，关联第一个邮箱：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;account_one@example.com&quot;</span></span><br></pre></td></tr></table></figure><ul><li>提示 <code>Enter file in which to save the key</code> 时，<strong>直接回车</strong>，使用默认文件名 <code>id_rsa</code> 和 <code>id_rsa.pub</code>。</li><li>提示 <code>Enter passphrase</code> 时，也<strong>直接回车</strong>（不设置密码），方便使用。</li></ul></li><li><p>找到生成的密钥文件（通常在 <code>C:\Users\你的Windows用户名\.ssh\</code> 目录下），用记事本打开 <code>id_rsa.pub</code> 文件，复制里面的所有内容。</p><ul><li><code>id_rsa</code> (私钥 - <strong>不要泄露</strong>)</li><li><code>id_rsa.pub</code> (公钥 - 需要添加到 GitHub)</li></ul></li><li><p>将 SSH KEY 配置到</p><p> GitHub 登录你的第一个 GitHub 账号 (<code>user1</code>，邮箱 <code>account_one@example.com</code>)，点击右上角头像 选择 <strong>settings</strong>，进入设置页后选择 <strong>SSH and GPG keys</strong>，点击 <strong>New SSH key</strong>，名字随便起，<strong>Key type</strong> 选择 <code>Authentication Key</code>，公钥填到 <code>Key</code> 那一栏，点击 <strong>Add SSH key</strong>。</p></li></ol><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/25/72b57b3c67d7c225bef118ae0ccbb441-79e418fe.webp" alt="Snipaste_2025-07-25_22-22-26"></p><h3 id="2-3-测试第一个账号的-SSH-连接"><a href="#2-3-测试第一个账号的-SSH-连接" class="headerlink" title="2.3 测试第一个账号的 SSH 连接"></a>2.3 测试第一个账号的 SSH 连接</h3><p>在 <code>Git Bash</code> 中输入以下命令测试连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><ul><li>如果是第一次连接，会提示 <code>Are you sure you want to continue connecting (yes/no/[fingerprint])?</code>，输入 <code>yes</code> 并回车。</li><li>如果看到类似 <code>Hi user1! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code> 的信息，说明连接成功。</li></ul><h3 id="2-4-为第一个账号创建-GitHub-Pages-仓库"><a href="#2-4-为第一个账号创建-GitHub-Pages-仓库" class="headerlink" title="2.4 为第一个账号创建 GitHub Pages 仓库"></a>2.4 为第一个账号创建 GitHub Pages 仓库</h3><ol><li>登录你的第一个 GitHub 账号 (<code>user1</code>)，点击右上角的 <code>+</code> 按钮，选择 <strong>New repository</strong> ，创建一个 <code>&lt;用户名&gt;.github.io</code> 的仓库。例如，<strong>Repository name</strong> 必须是：<code>user1.github.io</code> 。</li></ol><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F12%2F15%2Fe9b770ca443bdceefc9ac92aa00fe10d-478b90f1.webp" alt="创建GitHub.io仓库"></p><ol start="2"><li><p><strong>Public</strong> 选择 <code>Public</code> 方便第一次部署检查问题。</p></li><li><p>点击 <strong>Create repository</strong> 进行创建即可。</p></li></ol><h2 id="3-初始化第一个-Hexo-博客-blog-demo"><a href="#3-初始化第一个-Hexo-博客-blog-demo" class="headerlink" title="3. 初始化第一个 Hexo 博客 (blog-demo)"></a>3. 初始化第一个 Hexo 博客 (<code>blog-demo</code>)</h2><h3 id="3-1-创建项目文件夹并安装-Hexo"><a href="#3-1-创建项目文件夹并安装-Hexo" class="headerlink" title="3.1 创建项目文件夹并安装 Hexo"></a>3.1 创建项目文件夹并安装 Hexo</h3><ol><li><p>创建一个文件夹来保存博客源码（例如：<code>D:/Hexo-Blog/blog-demo</code>）；</p></li><li><p>在 <code>blog-demo</code> 文件夹内右键鼠标，选择 <code>Open Git Bash here</code>，在 <code>Git BASH</code> 输入如下命令安装 Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure></li><li><p>安装完后输入 <code>hexo -v</code> 验证是否安装成功。</p></li></ol><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F12%2F15%2Fe63d3e27574e58cb7c8e12e94fbc441e-2b8c4fdd.webp" alt="Hexo版本" style="zoom: 50%;" /><h3 id="3-2-初始化-Hexo-项目"><a href="#3-2-初始化-Hexo-项目" class="headerlink" title="3.2 初始化 Hexo 项目"></a>3.2 初始化 Hexo 项目</h3><p>在 <code>blog-demo</code> 目录下执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init .</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><ul><li><code>.</code> 表示在当前目录初始化。</li><li>这会安装 Hexo 所需的依赖。</li></ul><p>初始化项目后，<code>blog-demo</code> 有如下结构：</p><blockquote><ul><li><strong>node_modules</strong>：依赖包</li><li><strong>scaffolds</strong>：生成文章的一些模板</li><li><strong>source</strong>：用来存放你的文章</li><li><strong>themes</strong>：主题</li><li><strong>.npmignore</strong>：发布时忽略的文件（可忽略）</li><li><strong>_config.landscape.yml</strong>：主题的配置文件</li><li><strong>config.yml</strong>：博客的配置文件</li><li><strong>package.json</strong>：项目名称、描述、版本、运行和开发等信息</li></ul></blockquote><h3 id="3-3-启动并预览本地博客"><a href="#3-3-启动并预览本地博客" class="headerlink" title="3.3 启动并预览本地博客"></a>3.3 启动并预览本地博客</h3><p>在 <code>blog-demo</code> 目录下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><ul><li><code>hexo clean</code> 清理缓存。</li><li><code>hexo s</code> (或 <code>hexo server</code>) 启动本地服务器。</li></ul><p>打开浏览器，输入地址：<code>http://localhost:4000/</code> ，看到默认的 Hexo 页面，说明你的博客已经构建成功了。</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F12%2F15%2Fceb33145ed97e0fb1675082f64b6e55d-01b91291.webp" alt="界面"></p><h3 id="3-4-配置第一个博客的部署设置"><a href="#3-4-配置第一个博客的部署设置" class="headerlink" title="3.4 配置第一个博客的部署设置"></a>3.4 配置第一个博客的部署设置</h3><ol><li><p>安装 Hexo 部署插件-<strong>hexo-deployer-git</strong></p><p>在博客源码文件夹右键打开 <code>Git Bash</code>，输入下面命令安装 Hexo 的 Git 部署插件；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>使用 VSCode 或其他文本编辑器打开 <code>blog-demo</code> 目录下的 <code>_config.yml</code> 文件（这是 Hexo 的主配置文件）。</p><p>找到文件末尾的 deploy 部分，修改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com:user1/user1.github.io.git</span><br><span class="line">  branch: main <span class="comment"># 或 gh-pages，取决于你的仓库设置</span></span><br></pre></td></tr></table></figure><ul><li>将 <code>user1/user1.github.io.git</code> 替换为你第一个账号的实际仓库地址。</li><li>分支要改为 <code>main</code> 代表主分支（注意缩进）。</li></ul></li><li><p>回到 <code>Git Bash</code> (在 <code>blog-demo</code> 目录下)，执行部署命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><p>或使用缩写（在 VSCode 终端中）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：deploy时可能要你输入 username 和 password（尽管使用了 SSH，但某些情况下仍可能提示）。</p></li><li><p>如果出现 <strong>Deploy done</strong>，则说明部署成功了。稍等两分钟，打开浏览器访问：<code>https://user1.github.io</code> ，这时候我们就可以看到博客内容了。</p></li></ol><h2 id="4-配置-Git-和连接第二个-GitHub-账号-user2-account-two-example-com"><a href="#4-配置-Git-和连接第二个-GitHub-账号-user2-account-two-example-com" class="headerlink" title="4. 配置 Git 和连接第二个 GitHub 账号 (user2 - account_two@example.com)"></a>4. 配置 Git 和连接第二个 GitHub 账号 (<code>user2</code> - <code>account_two@example.com</code>)</h2><p>现在我们为第二个账号设置独立的环境。</p><h3 id="4-1-为第二个账号生成新的-SSH-密钥对"><a href="#4-1-为第二个账号生成新的-SSH-密钥对" class="headerlink" title="4.1 为第二个账号生成新的 SSH 密钥对"></a>4.1 为第二个账号生成新的 SSH 密钥对</h3><ol><li><p>打开 <code>Git Bash</code>。</p></li><li><p>为第二个账号 (<code>account_two@example.com</code>) 生成新的 SSH 密钥对，指定不同的文件名以避免冲突：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;account_two@example.com&quot;</span> -f ~/.ssh/id_rsa_user2</span><br></pre></td></tr></table></figure><ul><li><code>-f ~/.ssh/id_rsa_user2</code>：指定密钥文件名为 <code>id_rsa_user2</code> 和 <code>id_rsa_user2.pub</code>。</li></ul><ul><li>提示 <code>Enter passphrase</code> 时，<strong>直接回车</strong>（不设置密码）。</li></ul></li></ol><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/25/89c97d316e9938b86f6bedc13e55292a-d0d7bd08.webp" alt="Snipaste_2025-07-25_22-51-24"></p><h3 id="4-2-将第二个-SSH-公钥添加到第二个-GitHub-账号"><a href="#4-2-将第二个-SSH-公钥添加到第二个-GitHub-账号" class="headerlink" title="4.2 将第二个 SSH 公钥添加到第二个 GitHub 账号"></a>4.2 将第二个 SSH 公钥添加到第二个 GitHub 账号</h3><p>用记事本打开 <code>~/.ssh/id_rsa_user2.pub</code> 文件，复制所有内容，登录你的第二个 GitHub 账号 ，进入 <strong>Settings</strong> -&gt; <strong>SSH and GPG keys</strong> -&gt; 点击 <strong>New SSH key</strong>，名字随便起，<strong>Key type</strong> 选择 <code>Authentication Key</code>，公钥填到 <code>Key</code> 那一栏，点击 <strong>Add SSH key</strong>。</p><h3 id="4-3-配置-SSH-客户端以区分不同账号"><a href="#4-3-配置-SSH-客户端以区分不同账号" class="headerlink" title="4.3 配置 SSH 客户端以区分不同账号"></a>4.3 配置 SSH 客户端以区分不同账号</h3><p>为了让 Git 知道连接不同的 GitHub 账号时使用哪个密钥，需要配置 SSH 客户端。</p><p>在 <code>C:\Users\你的Windows用户名\.ssh\</code> 目录下，检查是否存在 <code>config</code> 文件。如果没有，使用文本编辑器新建一个，文件名为 <code>config</code>（没有扩展名）。</p><p>编辑 <code>config</code> 文件，添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># Default GitHub account (user1 - account_one@example.com)</span><br><span class="line">Host github.com</span><br><span class="line">  HostName github.com</span><br><span class="line">  User git</span><br><span class="line">  IdentityFile ~/.ssh/id_rsa</span><br><span class="line">  IdentitiesOnly yes</span><br><span class="line"></span><br><span class="line"># Second GitHub account (user2 - account_two@example.com)</span><br><span class="line">Host github-user2 # 自定义别名</span><br><span class="line">  HostName github.com</span><br><span class="line">  User git</span><br><span class="line">  IdentityFile ~/.ssh/id_rsa_user2</span><br><span class="line">  IdentitiesOnly yes</span><br></pre></td></tr></table></figure><ul><li><code>Host github.com</code>：这是默认配置，关联第一个账号的密钥 (<code>id_rsa</code>)。</li><li><code>Host github-user2</code>：这是为第二个账号创建的<strong>自定义别名</strong>。后面部署第二个博客时会用到这个别名。</li><li><code>IdentityFile</code>：分别指向两个不同的私钥文件。</li><li><code>IdentitiesOnly yes</code>：确保只使用指定的密钥。</li></ul><h3 id="4-4-为第二个账号创建-GitHub-Pages-仓库"><a href="#4-4-为第二个账号创建-GitHub-Pages-仓库" class="headerlink" title="4.4 为第二个账号创建 GitHub Pages 仓库"></a>4.4 为第二个账号创建 GitHub Pages 仓库</h3><ol><li><p>登录你的第二个 GitHub 账号，点击右上角的 <code>+</code> 按钮，选择 <strong>New repository</strong> ，创建一个 <code>&lt;用户名&gt;.github.io</code> 的仓库。</p><p><strong>Repository name</strong> 必须是：<code>user2.github.io</code> (注意：前缀必须为用户名，此为预览博客需要，后期可修改仓库名)</p></li><li><p><strong>Public</strong> 选择 <code>Public</code> 方便第一次部署检查问题，点击 <strong>Create repository</strong> 进行创建即可。</p></li></ol><h2 id="5-初始化第二个-Hexo-博客-blog-main"><a href="#5-初始化第二个-Hexo-博客-blog-main" class="headerlink" title="5. 初始化第二个 Hexo 博客 (blog-main)"></a>5. 初始化第二个 Hexo 博客 (<code>blog-main</code>)</h2><h3 id="5-1-创建项目文件夹并安装-Hexo"><a href="#5-1-创建项目文件夹并安装-Hexo" class="headerlink" title="5.1 创建项目文件夹并安装 Hexo"></a>5.1 创建项目文件夹并安装 Hexo</h3><ol><li><p>在你的电脑上创建一个<strong>新</strong>的文件夹来存放第二个博客的源码，例如：<code>D:\Hexo-Blog\blog-main</code>。</p></li><li><p>在 <code>blog-main</code> 文件夹内，按住 <code>Shift</code> 键并右键，选择 <strong>在此处打开 PowerShell</strong> 或 <strong>Open Git Bash here</strong>。</p></li><li><p><strong>（重要）为这个本地仓库设置特定的用户信息</strong>（覆盖全局配置）,这确保了在此目录下的 Git 提交（包括 Hexo 的部署）使用第二个账号的信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init <span class="comment"># 如果目录不是 Git 仓库，需要先初始化</span></span><br><span class="line">git config user.name <span class="string">&quot;user2&quot;</span></span><br><span class="line">git config user.email <span class="string">&quot;account_two@example.com&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>初始化 Hexo 项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init .</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li></ol><h3 id="5-2-启动并预览本地博客"><a href="#5-2-启动并预览本地博客" class="headerlink" title="5.2 启动并预览本地博客"></a>5.2 启动并预览本地博客</h3><p>在 <code>blog-main</code> 目录下执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器访问 <code>http://localhost:4000/</code>，预览第二个博客。</p><h3 id="5-3-配置第二个博客的部署设置"><a href="#5-3-配置第二个博客的部署设置" class="headerlink" title="5.3 配置第二个博客的部署设置"></a>5.3 配置第二个博客的部署设置</h3><ol><li><p>确保在 <code>blog-main</code> 目录下，安装 Hexo 部署插件（如果尚未安装）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>使用 VSCode 或其他文本编辑器打开 <code>blog-main</code> 目录下的 <code>_config.yml</code> 文件。找到文件末尾的 <code>deploy</code> 部分，<strong>关键在于 <code>repository</code> 的主机名部分要使用你在 <code>config</code> 文件中定义的别名 <code>github-user2</code></strong>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="comment"># 注意这里的主机名是 config 文件中定义的别名</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github-user2:user2/user2.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span> <span class="comment"># 或 gh-pages</span></span><br></pre></td></tr></table></figure><ul><li><code>git@github-user2</code>：这部分告诉 SSH 客户端使用 <code>config</code> 文件中 <code>Host github-user2</code> 的配置，即使用 <code>id_rsa_user2</code> 私钥。</li></ul></li><li><p>回到 <code>Git Bash</code> (在 <code>blog-main</code> 目录下)，执行部署命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></li></ol><p>如果出现 <strong>Deploy done</strong>，则说明部署成功了。稍等两分钟，打开浏览器访问：<code>https://user2.github.io</code> ，这时候我们就可以看到博客内容了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过以上步骤，你实现了：</p><ol><li><strong>全局配置</strong>：为第一个 GitHub 账号 (<code>user1</code>) 设置了全局的 Git 用户信息和默认 SSH 密钥。</li><li><strong>本地覆盖</strong>：为第二个博客 (<code>blog-main</code>) 的本地目录设置了特定的 Git 用户信息 (<code>user2</code>)。</li><li><strong>多账号 SSH 管理</strong>：通过生成不同的 SSH 密钥对 (<code>id_rsa</code>, <code>id_rsa_user2</code>) 并配置 <code>~/.ssh/config</code> 文件，实现了使用不同密钥连接到同一个 GitHub 主机 (<code>github.com</code>) 但对应不同账号。</li><li>独立部署<ul><li>第一个博客 (<code>blog-demo</code>) 通过默认的 <code>git@github.com:...</code> 地址部署到 <code>user1.github.io</code>。</li><li>第二个博客 (<code>blog-main</code>) 通过自定义别名 <code>git@github-user2:...</code> 地址部署到 <code>user2.github.io</code>。</li></ul></li></ol><p>现在你可以分别在 <code>blog-demo</code> 和 <code>blog-main</code> 文件夹中独立地开发、预览和部署你的两个博客了。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;使用一台电脑管理两个-GitHub-账号的-Hexo-博客完整指南&quot;&gt;&lt;a href=&quot;#使用一台电脑管理两个-GitHub-账号的-Hexo-博客完整指南&quot; class=&quot;headerlink&quot; title=&quot;使用一台电脑管理两个 GitHub 账号的</summary>
        
      
    
    
    
    <category term="博客相关" scheme="http://example.com/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    <category term="技术教程" scheme="http://example.com/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="GitHub" scheme="http://example.com/tags/GitHub/"/>
    
    <category term="SSH" scheme="http://example.com/tags/SSH/"/>
    
    <category term="多账号" scheme="http://example.com/tags/%E5%A4%9A%E8%B4%A6%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>解锁个性化体验：Spicetify 改造你的 Spotify 客户端</title>
    <link href="http://example.com/2025/07/18/%E8%A7%A3%E9%94%81%E4%B8%AA%E6%80%A7%E5%8C%96%E4%BD%93%E9%AA%8C%EF%BC%9ASpicetify%20%E6%94%B9%E9%80%A0%E4%BD%A0%E7%9A%84%20Spotify%20%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    <id>http://example.com/2025/07/18/%E8%A7%A3%E9%94%81%E4%B8%AA%E6%80%A7%E5%8C%96%E4%BD%93%E9%AA%8C%EF%BC%9ASpicetify%20%E6%94%B9%E9%80%A0%E4%BD%A0%E7%9A%84%20Spotify%20%E5%AE%A2%E6%88%B7%E7%AB%AF/</id>
    <published>2025-07-18T13:02:00.000Z</published>
    <updated>2025-07-28T13:40:37.714Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>舍不得如此灿烂的某人，照亮了一起走过的日子；忘不了有笑有泪的共同经历，你我之间的情谊是那么真挚；缘起缘灭，人海沉浮，相忘于江湖。几分怅惘，几许祝福，几丝江湖气。                                            ——@知乎网友</em></p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>🌟 <strong>Spotify：音乐爱好者的天堂</strong><br>Spotify 是全球领先的正版流媒体音乐服务商之一，汇聚数亿用户，覆盖全球。其音乐库包含超过 ，涵盖 Sony Music、EMI、Warner Music Group 和 Universal Music Group 等四大唱片公司及众多独立厂牌的作品。</p><p>⚠️ <strong>体验上的不足</strong><br>尽管功能强大，Spotify 仍存在一些问题，例如广告频繁打扰（免费用户）、歌词功能不完善以及主题单一等。这些缺陷在一定程度上影响了用户体验。</p><p>🔧 <strong>Spicetify：个性化 Spotify 的神器</strong><br>为解决上述问题，开源工具 Spicetify 应运而生！它支持用户自定义 Spotify 客户端的外观与功能，包括更改配色方案、安装自定义应用与扩展、屏蔽广告等，让你的音乐体验更自由、更独特！</p><h2 id="Spicetify-是什么"><a href="#Spicetify-是什么" class="headerlink" title="Spicetify 是什么"></a>Spicetify 是什么</h2><p>Spicetify 是一个多平台的命令行工具，用于自定义官方的 Spotify 客户端。它允许用户更改 Spotify 客户端的外观和功能，包括调整用户界面的配色方案和主题、安装自定义应用程序和扩展、屏蔽广告以及删除 Spotify 桌面应用程序中的一些不必要功能<a href="%5B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8Spotify%E5%A4%AA%E4%B8%91%EF%BC%9F%E7%BB%99%E5%AE%83%E6%8D%A2%E4%B8%AA%E7%9A%AE%E8%82%A4%EF%BC%8C%E7%AB%8B%E9%A9%AC%E5%A4%A7%E5%8F%98%E6%A0%B7%5D(https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649920587&idx=1&sn=586266c1aad64d898dc11b0095ace697&chksm=83a89066b4df19701a16aa282991a1bad6022c409f12c6f472ec8f6d905cf61870e442b1a556&token=707859341&lang=zh_CN#rd)">^1</a>。</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/18/dc6999f0358d876a120fd876ec1df802-3f80dbbe.webp" alt="PixPin_2025-07-18_19-26-21"></p><p>总之，通过 Spicetify，你可以将 Spotify 打造成一个更美观、更实用、更个性化的音乐播放器。</p><p><strong>项目地址</strong>：</p><ul><li><p>官网链接：<a href="https://spicetify.app/">https://spicetify.app/</a> </p></li><li><p>Github项目地址：<a href="https://github.com/spicetify">Spicetify (github.com)</a></p></li></ul><h2 id="Spicetify-安装"><a href="#Spicetify-安装" class="headerlink" title="Spicetify 安装"></a>Spicetify 安装</h2><p>Spotify 在 Linux、Mac、Windows 桌面端都是 CEF (Chromium Embedded Framework) 架构，这给对客户端修改的修改提升了很大的便利和可行性。</p><p>Spicetify 有安装教程【<a href="https://spicetify.app/docs/getting-started"><strong>点击跳转</strong></a>】，下面的命令也是基于官网文档的。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p><strong>step1</strong>：确保已经安装好了 Spotify 软件；</p><p>Spotify 官网：<a href="https://open.spotify.com/"><em>https://open.spotify.com/</em></a></p><p><strong>step2</strong>：保证计算机全局可以🪜🪜；</p><ul><li>使用软路由进行网络代理🎈；</li><li>使用代理软件进行网络代理，在软件中开启 <strong>全局代理</strong> &#x2F; <strong>Tun 模式。</strong></li></ul><h3 id="Windows-平台"><a href="#Windows-平台" class="headerlink" title="Windows 平台"></a>Windows 平台</h3><p>将下面命令分别复制到 <code>powershell</code> 里执行就能完成安装。（最好是以管理员身份打开 powershell，以免出现权限不足的问题。）</p><p>本人以 Windows11 系统为例，进行演示：</p><p><strong>Powershell （预构建的二进制文件）</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">iwr</span> <span class="literal">-useb</span> https://raw.githubusercontent.com/spicetify/<span class="built_in">cli</span>/main/install.ps1 | <span class="built_in">iex</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F03%2F10%2Fe6e505146cc0c126f5a46c2526970e42-45482216.png" alt="image-20240310153321052"></p><p>如果您想安装 <a href="https://github.com/spicetify/marketplace"><strong>Spicetify Marketplace</strong></a>，还可以运行以下命令，它使您可以访问 Spotify 侧边栏中的一个选项卡，该选项卡允许您搜索和安装主题、扩展和片段。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">iwr</span> <span class="literal">-useb</span> https://raw.githubusercontent.com/spicetify/marketplace/main/resources/install.ps1 | <span class="built_in">iex</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F03%2F10%2F75d23c4bb947edf4bad920ce73e19be3-df76bcf3.png" alt="image-20240310155433454"></p><h3 id="Linux-和-MacOS"><a href="#Linux-和-MacOS" class="headerlink" title="Linux 和 MacOS"></a>Linux 和 MacOS</h3><h4 id="Shell（预构建二进制文件）"><a href="#Shell（预构建二进制文件）" class="headerlink" title="Shell（预构建二进制文件）"></a>Shell（预构建二进制文件）</h4><p><strong>安装 Spicetify CLI</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/spicetify/cli/main/install.sh | sh</span><br></pre></td></tr></table></figure><p><strong>安装 Spicetify Marketplace</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/spicetify/marketplace/main/resources/install.sh | sh</span><br></pre></td></tr></table></figure><p>分别复制命令在终端里执行就能完成安装，在不同系统中粘贴的这 2 行命令，其实是从 GitHub 下载 Spicetify 和相关的文件，不出意外的话， <strong>Spicetify</strong> 和 <strong>Spicetify Marketplace</strong> 便可顺利安装。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>完成上面安装 Spicetify 和 Spicetify Marketplace 的操作后，就可以使用它来自定义您的 Spotify 使用 Marketplace 中找到的所有<strong>可用扩展</strong>和<strong>主题</strong></p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F03%2F10%2Fbd7dc695684dcd6884b9f2f3c25dda76-7b0b3911.png" alt="image-20240310114030166"></p><p>💡 <strong>小贴士</strong></p><ul><li>插件市场（Spicetify Marketplace）里的内容本质上也是一些 <code>.js</code> 插件</li><li>有些插件可能依赖其他资源（如 CSS 或图片），通常会放在 <code>customApps</code> 或 <code>themes</code> 中配合使用</li></ul><h3 id="spicetify-常见命令"><a href="#spicetify-常见命令" class="headerlink" title="spicetify 常见命令"></a>spicetify 常见命令</h3><ul><li><strong>基础命令</strong>🔧</li></ul><table><thead><tr><th align="center">命令</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center"><code>spicetify</code></td><td align="center">显示 Spicetify CLI 的帮助信息和所有可用命令</td></tr><tr><td align="center"><code>spicetify -h</code> 或 <code>spicetify --help</code></td><td align="center">显示帮助信息</td></tr><tr><td align="center"><code>spicetify --version</code></td><td align="center">查看当前安装的 Spicetify 版本</td></tr></tbody></table><ul><li><strong>主题设置与应用</strong>🎨</li></ul><table><thead><tr><th align="center">命令</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center"><code>spicetify config current-theme &lt;theme-name&gt;</code></td><td align="center">设置当前使用的主题</td></tr><tr><td align="center"><code>spicetify config color-scheme &lt;scheme-name&gt;</code></td><td align="center">设置当前使用的配色方案</td></tr><tr><td align="center"><code>spicetify apply</code></td><td align="center">应用配置（包括主题、配色等）</td></tr><tr><td align="center"><code>spicetify backup</code></td><td align="center">手动备份原始 Spotify 文件</td></tr><tr><td align="center"><code>spicetify restore</code></td><td align="center">恢复原始 Spotify 文件（撤销所有修改）</td></tr></tbody></table><ul><li><strong>恢复与备份</strong>🔁</li></ul><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>spicetify backup</code></td><td align="center">手动备份原始 Spotify 文件</td></tr><tr><td align="center"><code>spicetify restore</code></td><td align="center">恢复 Spotify 到原始状态</td></tr><tr><td align="center"><code>spicetify reset</code></td><td align="center">重置 Spicetify 的配置，清除所有自定义设置。</td></tr><tr><td align="center"><code>spicetify upgrade</code></td><td align="center">更新 Spicetify</td></tr></tbody></table><ul><li><strong>插件与自定义</strong>📁</li></ul><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>spicetify config extensions &lt;extension.js&gt;</code></td><td align="center">添加一个插件脚本</td></tr><tr><td align="center"><code>spicetify config extensions</code></td><td align="center">查看已安装插件</td></tr><tr><td align="center"><code>spicetify config custom-apps &lt;app-name&gt;</code></td><td align="center">启用一个自定义应用</td></tr><tr><td align="center"><code>spicetify config-dir</code></td><td align="center">打开配置文件所在目录</td></tr><tr><td align="center"><code>spicetify backup-dir</code></td><td align="center">打开备份文件所在目录</td></tr><tr><td align="center"><code>spicetify cache-dir</code></td><td align="center">打开缓存文件所在目录</td></tr></tbody></table><p>有关其他命令和其他标志信息，请运行：<code>spicetify --help</code>命令查看。</p><h3 id="插件安装与卸载"><a href="#插件安装与卸载" class="headerlink" title="插件安装与卸载"></a>插件安装与卸载</h3><h4 id="扩展存储路径"><a href="#扩展存储路径" class="headerlink" title="扩展存储路径"></a>扩展存储路径</h4><ul><li><code>Extensions</code>文件夹</li></ul><table><thead><tr><th align="center">平台</th><th align="center">路径</th></tr></thead><tbody><tr><td align="center"><strong>Windows</strong></td><td align="center"><code>%appdata%\spicetify\Extensions\</code></td></tr><tr><td align="center"><strong>Linux</strong>&#x2F;<strong>MacOS 操作系统</strong></td><td align="center"><code>~/.config/spicetify/Extensions</code></td></tr></tbody></table><ul><li><code>Extensions</code>文件夹中的文件夹。</li></ul><p>如果有 2 个同名的扩展，则 Home 目录中的扩展将被优先考虑。</p><p>将扩展文件放入正确的文件夹后，运行以下命令进行安装（有的插件可以直接用插件安装）：</p><h4 id="插件安装与卸载-1"><a href="#插件安装与卸载-1" class="headerlink" title="插件安装与卸载"></a>插件安装与卸载</h4><ul><li><strong>插件市场安装 vs 命令安装插件的区别</strong></li></ul><table><thead><tr><th align="center">特性</th><th align="center">插件市场安装</th><th>命令安装 (手动)</th></tr></thead><tbody><tr><td align="center">安装方式</td><td align="center">通过 Marketplace 网站点击安装按钮，自动执行<code>spicetify install</code></td><td>使用命令手动下载并添加插件</td></tr><tr><td align="center">插件来源</td><td align="center">通常来自官方或社区认证的插件</td><td>可以来自任何 GitHub 或自定义源</td></tr><tr><td align="center">更新方式</td><td align="center">通常提供更新提示或自动更新机制</td><td>需要手动更新文件</td></tr><tr><td align="center">卸载难度</td><td align="center">通常有明确的卸载提示或按钮</td><td>需要知道插件文件名和路径</td></tr></tbody></table><p>插件市场安装插件较为简单，不在赘述，简单说明下命令安装的一般指令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spicetify config extensions &lt;file name&gt;</span><br><span class="line">spicetify apply</span><br></pre></td></tr></table></figure><p><em><strong>Tips</strong>：使用命令添加扩展时，总是将文件名附加到现有的扩展列表中，它不会替换整个键的值。</em></p><p>如果你想从当前的扩展列表中移除一个扩展，你可以在文件名后面添加一个 <code>-</code>。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spicetify config extensions &lt;file name&gt;-  <span class="comment"># 建议用这个</span></span><br><span class="line">spicetify config remove extensions &lt;file name&gt;</span><br><span class="line"></span><br><span class="line">spicetify apply</span><br></pre></td></tr></table></figure><h3 id="软件更新"><a href="#软件更新" class="headerlink" title="软件更新"></a>软件更新</h3><p>由于 Spotify 时不时地更新其客户端。由于我们无权控制此过程，因此您可能需要重新应用 Spicetify。建议每次 Spotify 更新后，使用下面的命令升级应用 spicetify。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spicetify update</span><br><span class="line">spicetify upgrade</span><br><span class="line">spicetify backup apply</span><br></pre></td></tr></table></figure><ul><li><p><code>spicetify update</code>：<br>更新 Spicetify 的核心资源，包括主题、扩展、自定义应用等资源文件，但<strong>不会更新 Spicetify CLI 本身</strong> 。</p></li><li><p><code>spicetify upgrade</code><br>升级 Spicetify CLI 到最新版本。这个命令会检查官方发布的最新版本，并进行更新。</p></li><li><p><code>spicetify backup apply</code></p><p>首先备份原始未被修改 Spotify 文件，并应用当前的 Spicetify 配置（包括主题、扩展和配色方案等），确保修改安全且生效。</p></li></ul><h3 id="推荐插件"><a href="#推荐插件" class="headerlink" title="推荐插件"></a>推荐插件</h3><p>下面的插件大多数都可以通过<strong>插件市场</strong>安装，极少数可以通过命令安装。</p><h4 id="Full-App-Display（市场）"><a href="#Full-App-Display（市场）" class="headerlink" title="Full App Display（市场）"></a>Full App Display（市场）</h4><p>Full App Display 是 Spicetify 提供的插件，允许用户在 Spotify 客户端中启用全屏显示模式。用户可以隐藏或显示播放控制、歌曲信息和播放列表等元素，实现简洁的全屏播放体验。</p><p><a href="https://github.com/huhridge/huh-spicetify-extensions">huhridge&#x2F;huh-spicetify-extensions: Collection of my spicetify extensions</a></p><p>一般通过市场安装，若要安装，请运行以下命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spicetify config extensions fullAppDisplay.js     </span><br><span class="line">spicetify apply        </span><br></pre></td></tr></table></figure><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F03%2F10%2F2d3bbcc1d00367d7622b48bfeb0a873e-af4d5ebb.png" alt="image-20240310115041160"></p><p>安装后软件右上角会有一个<strong>小电视标志</strong>，如下图所示：</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/18/a43845a72b5f21973737976dce0c1bb8-ce63314d.webp" alt="PixPin_2025-07-18_16-06-33"></p><h4 id="Full-Screen（市场）"><a href="#Full-Screen（市场）" class="headerlink" title="Full Screen（市场）"></a>Full Screen（市场）</h4><p><code>Full Screen</code> 也能实现优雅全屏的播放，专辑封面显示和模糊效果背景。与 <code>Full App Display</code> 功能差不多，但我感觉 <code>Full Screen</code> 更帅。</p><p><a href="https://github.com/daksh2k/Spicetify-stuff">daksh2k&#x2F;Spicetify-stuff: Some spicetify extensions!</a></p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F03%2F10%2Fbc0b5c5ae25d95a4b96d58439875ac1e-c6f0b0ad.png" alt="image-20240310224654973"></p><h4 id="Lyrics-Plus"><a href="#Lyrics-Plus" class="headerlink" title="Lyrics Plus"></a>Lyrics Plus</h4><p>歌词增强的插件，从各种歌词提供商（Musixmatch、Netease、Genius）获取当前曲目的歌词。</p><p>若要安装，请运行以下命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spicetify config custom_apps lyrics<span class="literal">-plus</span>   </span><br><span class="line">spicetify apply</span><br></pre></td></tr></table></figure><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F03%2F10%2F5ddea73a29ab86391401b230abf20740-6f2ef6e5.png" alt="image-20240310114949480"></p><p>搞定之后，重启 Spotify，就能进入全屏播放的界面啦。</p><p>鼠标右击界面，会弹出下图的面板，可启用&#x2F;关闭多个选项，此外，点击界面右下角的按钮，还可以调整歌词的字号大小、歌词滚动的延迟时间，切换显示部分歌词&#x2F;全部歌词(Compact)。</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F03%2F10%2Fc0780118def6f959992bff9c97351b54-b899e83f.png" alt="image-20240310120146939"></p><h4 id="Adblock（市场）"><a href="#Adblock（市场）" class="headerlink" title="Adblock（市场）"></a>Adblock（市场）</h4><p>用于阻止所有音频广告和界面广告。只需运行该扩展，它就会开始工作！</p><p><a href="https://github.com/rxri/spicetify-extensions">rxri&#x2F;spicetify-extensions: Collection of custom Spicetify extensions to enhance your Spotify experience</a></p><h4 id="New-Releases"><a href="#New-Releases" class="headerlink" title="New Releases"></a>New Releases</h4><p>汇总来自最喜欢的艺术家、播客的所有新版本。时间范围、发布类型和其他过滤器可以在配置菜单中自定义（在配置文件菜单中，右上角带有您的用户名的按钮）。</p><p>若要安装，请运行以下命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spicetify config custom_apps <span class="built_in">new-releases</span></span><br><span class="line">spicetify apply</span><br></pre></td></tr></table></figure><h3 id="Spicetify-卸载"><a href="#Spicetify-卸载" class="headerlink" title="Spicetify 卸载"></a>Spicetify 卸载</h3><p>如果不想用了可以参考下面的命令卸载Spicetify。</p><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spicetify restore</span><br><span class="line"><span class="built_in">rmdir</span> <span class="literal">-r</span> <span class="literal">-fo</span> <span class="variable">$env:APPDATA</span>\spicetify</span><br><span class="line"><span class="built_in">rmdir</span> <span class="literal">-r</span> <span class="literal">-fo</span> <span class="variable">$env:LOCALAPPDATA</span>\spicetify</span><br></pre></td></tr></table></figure><h4 id="Linux-and-MacOS"><a href="#Linux-and-MacOS" class="headerlink" title="Linux and MacOS"></a>Linux and MacOS</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spicetify restore</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> ~/.spicetify</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> ~/.config/spicetify</span><br></pre></td></tr></table></figure><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>换主题最简单就是在插件市场搜索直接应用即可；</p><p>若要使用第三方主题，将主题文件下载到本地后进行解压，将解压得到的多个主题文件放到 <code>.spicetify</code> 下的 Themes 文件夹中。</p><p>网上有很多 Spicetify 主题，也有整理好的 Spicetify 主题库，推荐下载 Spicetify <a href="https://github.com/spicetify/spicetify-themes">官方主题库</a>。</p><h3 id="命令实现"><a href="#命令实现" class="headerlink" title="命令实现"></a>命令实现</h3><p>如果安装了<code>git</code>的话，直接复制下面的命令完成添加。</p><p><strong>Windows</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/spicetify/spicetify<span class="literal">-themes</span>.git</span><br><span class="line"><span class="built_in">cd</span> spicetify<span class="literal">-themes</span></span><br><span class="line"><span class="built_in">cp</span> * <span class="string">&quot;<span class="variable">$</span>(spicetify -c | Split-Path)\Themes\&quot;</span> <span class="literal">-Recurse</span>           <span class="comment">#将spicetify-themes目录中的所有文件和目录复制到Spicetify的主题目录中</span></span><br></pre></td></tr></table></figure><p><strong>Linux</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/spicetify/spicetify<span class="literal">-themes</span>.git</span><br><span class="line"><span class="built_in">cd</span> spicetify<span class="literal">-themes</span></span><br><span class="line"><span class="built_in">cp</span> <span class="literal">-r</span> * ~/.config/spicetify/Themes</span><br></pre></td></tr></table></figure><p><strong>Mac</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/spicetify/spicetify<span class="literal">-themes</span>.git</span><br><span class="line"><span class="built_in">cd</span> spicetify<span class="literal">-themes</span></span><br><span class="line"><span class="built_in">cp</span> <span class="literal">-r</span> * ~/.config/spicetify/Themes</span><br></pre></td></tr></table></figure><h3 id="手动实现"><a href="#手动实现" class="headerlink" title="手动实现"></a>手动实现</h3><p>不想安装<code>git</code>也可以，直接复制主题文件到 <code>Spicetify</code> 主题文件夹目录即可，详情可以参考文章<a href="%5B%E4%BD%BF%E7%94%A8Spicetify%E6%9B%B4%E6%8D%A2Spotify%E4%B8%BB%E9%A2%98&%E6%A1%8C%E9%9D%A2%E5%AE%9E%E7%8E%B0%E6%BB%9A%E5%8A%A8%E6%AD%8C%E8%AF%8D%5D(https://receptive-mandible-a0f.notion.site/spicetify-5f7f87d6069d44ba88b4e3d8e8f25cae)">^3</a>设置即可。</p><p>您可以在 2 个地方放置主题：</p><table><thead><tr><th align="center">平台</th><th align="center">路径</th></tr></thead><tbody><tr><td align="center"><strong>窗户</strong></td><td align="center"><code>%appdata%\spicetify\Themes</code></td></tr><tr><td align="center"><strong>Linux</strong>&#x2F;<strong>Mac操作系统</strong></td><td align="center"><code>~/.config/spicetify/Themes</code></td></tr></tbody></table><p>简单办法是直接在 powershell 输入<code>spicetify config-dir</code>，即可以进入 <code>\spicetify</code> 文件夹。</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/18/139e75a5b22947e95d79032dc6a1dc39-f0fde2b8.webp" alt="PixPin_2025-07-18_18-35-39"></p><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><h4 id="终端直接切换"><a href="#终端直接切换" class="headerlink" title="终端直接切换"></a>终端直接切换</h4><p>官方仓库提供了 BurntSienna、Default、Dreary、Dribbblish、Flow、Glaze、Onepunch、Sleek、Turntable、Ziro 这几个主题，只需要在终端里执行下命令就能切换主题[^2]。</p><p>比如切换到 <code>Onepunch</code> 主题：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spicetify config current_theme Onepunch</span><br><span class="line">spicetify apply</span><br></pre></td></tr></table></figure><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F03%2F10%2Ff38b59d2b9dc7f4cc7d55e344308d457-9adeddd3.png" alt="image-20240310120907609"></p><p>此时重启 Spotify 客户端，就能看到更改主题之后的效果啦～</p><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>除了用上述方法切换主题外，可以直接修改 Spicetify 的配置文件 <code>config-xpui.ini</code>，用 VS Code 或任意一款文本编辑器打开这个配置文件。</p><p>修改配置文件，其实主要修改两个地方：</p><ul><li>current_theme：主题的名称</li><li>color_scheme：配色方案</li></ul><p>对于 Themes 下的每个文件夹就对应一个主题，文件夹的名称就是主题的名称。选定一个主题后，我们还需要配置一下主题的「配色方案」，这个参数来自主题文件夹中的 <code>color.ini</code> 文件。</p><p>选好想使用的主题和主题中提供的配色方案后，依次将这两个参数填入配置文件 <code>config-xpui.ini</code> 对应的两个字段中。</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/18/ff5b9a9cdf5c6063c49e8097e23a43b9-3fc9a0ff.webp" alt="Snipaste_2025-07-18_19-52-31"></p><p>填好之后，按下快捷键 Ctrl&#x2F;Command + S 保存更改。</p><p>完成以上操作后，我们还要来到终端，输入命令 <code>spicetify apply</code>，按下回车键确认更改 Spotify 主题，当下方返回「Spotify is spiced up!」，则说明已经完成主题的更改。</p><p>想要恢复到 Spotify 的默认未修改状态，在powershell中输入<code>spicetify restore</code>回车即可。</p><p><em><strong>Tips</strong>：spotify客户端自动升级后皮肤多半会失效，需要重新应用输入<code>spicetify apply</code>，有时 Spotify 客户端会更新，这是我们还需要输入<code>spicetify update</code>升级 spicetify 。</em></p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F03%2F10%2Ff9fefb7b0434210236513ac7eac34253-e26d07b1.png" alt="image-20240310111526668"></p><h2 id="歌词软件-Lyricify🎶✨"><a href="#歌词软件-Lyricify🎶✨" class="headerlink" title="歌词软件-Lyricify🎶✨"></a>歌词软件-Lyricify🎶✨</h2><p>Lyricify 是一款地表最强歌词工具，专为 Spotify 打造🎤。 Lyricify 支持 <strong>Spotify、iTunes、Apple Music、Music Center、QQ 音乐、网易云音乐</strong> 和 <strong>YesPlayMusic</strong>。</p><p><strong>官网地址</strong>：<a href="https://lyricify.app/zh-cn/">Lyricify，不仅有歌词</a></p><p>Lyricify 提供多种显示方式，包括桌面歌词、全屏歌词和独特的“灵动岛”歌词显示。灵动岛可以拖动到屏幕中央，并在光标靠近时自动隐藏，提供更加沉浸式的音乐体验。</p><p><a href="https://github.com/WXRIW/Lyricify-App">https://github.com/WXRIW/Lyricify-App</a></p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/18/94eddd2bfd9ced59d6a00fd9d2ec65ab-699f1772.webp" alt="PixPin_2025-07-18_19-07-07"></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="配置文件在哪里？"><a href="#配置文件在哪里？" class="headerlink" title="配置文件在哪里？"></a>配置文件在哪里？</h3><p><strong>配置文件通常位于：</strong></p><table><thead><tr><th align="center">平台</th><th align="right">路径</th></tr></thead><tbody><tr><td align="center"><strong>Windows</strong></td><td align="right"><code>%appdata%\spicetify\config-xpui.ini</code></td></tr><tr><td align="center"><strong>Linux</strong>&#x2F;<strong>MacOS 操作系统</strong></td><td align="right"><code>~/.config/spicetify/config-xpui.ini</code></td></tr></tbody></table><p>但是，您可以通过以下方式具体知道它的位置：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spicetify <span class="literal">-c</span></span><br></pre></td></tr></table></figure><p>或者，您可以通过在终端中输入以下内容来打开它所在的文件夹：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spicetify config<span class="literal">-dir</span></span><br></pre></td></tr></table></figure><p>有关每个配置字段的详细信息，请运行：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spicetify <span class="literal">--help</span> config</span><br></pre></td></tr></table></figure><h3 id="命令辨析"><a href="#命令辨析" class="headerlink" title="命令辨析"></a>命令辨析</h3><ul><li><p><code>spicetify restore</code> 和 <code>spicetify reset</code>区别</p><p>前者将 <strong>Spotify 客户端</strong>的文件恢复为原始未被修改的状态 ，即撤销 Spicetify 对 Spotify 的所有修改 ；后者将 <strong>Spicetify</strong> 的配置重置为默认状态 ，即删除所有自定义配置、插件、主题等设置 。</p></li><li><p><code>spicetify backup</code> 备份的是当下被 spicetify 修改过的吗？</p><p>此命令备份的是 Spotify 的原始未被修改的文件，<strong>不是</strong>当前被 Spicetify 修改过的文件 。</p></li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p>[^2]: <a href="https://spicetify.app/docs/getting-started">Getting Started,Spicetify</a></p>]]></content>
    
    
    <summary type="html">本文介绍了如何使用 Spicetify 对 Spotify 进行个性化优化，包括去广告、换主题、增强歌词显示等功能，提升音乐体验。</summary>
    
    
    
    <category term="技术教程" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Spotify 美化" scheme="http://example.com/tags/Spotify-%E7%BE%8E%E5%8C%96/"/>
    
    <category term="Spicetify" scheme="http://example.com/tags/Spicetify/"/>
    
    <category term="Lyricify 歌词" scheme="http://example.com/tags/Lyricify-%E6%AD%8C%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>OpenWrt 从入门到精通：全面掌握 OpenWrt 使用与配置</title>
    <link href="http://example.com/2025/07/15/OpenWrt%20%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%EF%BC%9A%E5%85%A8%E9%9D%A2%E6%8E%8C%E6%8F%A1%20OpenWrt%20%E4%BD%BF%E7%94%A8%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2025/07/15/OpenWrt%20%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%EF%BC%9A%E5%85%A8%E9%9D%A2%E6%8E%8C%E6%8F%A1%20OpenWrt%20%E4%BD%BF%E7%94%A8%E4%B8%8E%E9%85%8D%E7%BD%AE/</id>
    <published>2025-07-15T06:30:00.000Z</published>
    <updated>2025-07-23T02:43:10.296Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe width="560" height="315" src="https://www.youtube.com/embed/JfSJmPFiL_s?si=UNVeRNyW0tg2GrHE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h2 id="OpenWrt-简介"><a href="#OpenWrt-简介" class="headerlink" title="OpenWrt 简介"></a>OpenWrt 简介</h2><p>OpenWrt 是一个基于 Linux 的<strong>开源嵌入式操作系统</strong> ，主要用于路由器和其他网络设备。它不仅仅是一个路由器固件，而是一个完整的、高度可定制的操作系统平台，允许用户对网络设备进行深度控制和功能扩展。</p><p>常见固件：官方openwrt、immortalwrt、Lean固件、istore、其他</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/15/7b8a0c112629c141ed981ff85618847b-bb2dbe60.webp" alt="设备准备"></p><blockquote><p>immortalwrt 和Lean是国内大部分用户的固件选择，也为大家更方便的使用openwrt做出了卓越贡献！<br>感谢天灵、Lean等大佬们的付出。</p></blockquote><p>英特尔CPU性能对比：<a href="https://bulianglin.com/g/aHR0cHM6Ly93d3cuaW50ZWwuY24vY29udGVudC93d3cvY24vemgvc2VhcmNoLmh0bWw">https://bulianglin.com/g/aHR0cHM6Ly93d3cuaW50ZWwuY24vY29udGVudC93d3cvY24vemgvc2VhcmNoLmh0bWw</a></p><p>OpenWrt 支持的设备：<a href="https://openwrt.org/toh/start">https://openwrt.org/toh/start</a></p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/15/f0dc1aa2e41dc703b4c0541aaaa14a30-0d235357.webp" alt="支持的设备"></p><h2 id="OpenWrt-分类以及选择"><a href="#OpenWrt-分类以及选择" class="headerlink" title="OpenWrt 分类以及选择"></a>OpenWrt 分类以及选择</h2><h3 id="OpenWrt-分类"><a href="#OpenWrt-分类" class="headerlink" title="OpenWrt  分类"></a>OpenWrt  分类</h3><p><strong>官方 openwrt</strong>：应用商店在国外，没有科学插件，可以看作官方正版windows11，更新及时，但是软件商店需要科学，以及安装科学插件比较麻烦、OpenWrt 22.03版本开始使用基于 nftables 的 firewall4 防火墙。</p><p><strong>immortalwrt</strong>：openwrt的分支项目，从官方基础上做了针对中国用户的优化比如添加翻墙插件以及驱动方面的优化，软件源提供了大量常用的第三方插件，并且提供了cdn加速的镜像源，可以非常方便的安装和管理插件。同时跟随官方更新，改动较少，可以看作windows中国特供版，不足是新版本舍弃了旧版防火墙可能对老插件兼容不是很好， 23.05版本开始 firewall4 防火墙，之前有几个版本为了兼容性混用两种防火墙。</p><p><strong>Lean的固件</strong>：在官方较早的一个分支版本上开发，没有跟随官方版本更新，但对大部分插件兼容性很好，应用商店不够完善，适合编译，可以看作windows7修改版，不足之处暂时不兼容新的插件比如homeproxy和MihomoTproxy。iptables 的 firewall3 防火墙。</p><ul><li>官方版本：<a href="https://firmware-selector.openwrt.org/">https://firmware-selector.openwrt.org/</a></li><li>immortalwrt：<a href="https://firmware-selector.immortalwrt.org/">https://firmware-selector.immortalwrt.org/</a></li><li>Lean官方构建：<a href="https://github.com/coolsnowwolf/lede/actions">https://github.com/coolsnowwolf/lede/actions</a></li></ul><h3 id="固件选择"><a href="#固件选择" class="headerlink" title="固件选择"></a>固件选择</h3><p><strong>如果你没有特别多的插件以及老的插件使用需求，尽量选择官方 openwrt 或者 immortalwrt，</strong><br><strong>如果你喜欢折腾需要很多插件，但是不太使用较新的插件比如homeproxy、可以自行编译Lean，或者直接使用Lean自动构建的固件。</strong></p><p>自定义构建参考Package：<a href="https://downloads.immortalwrt.org/releases/23.05.1/packages/x86_64/luci/Packages">https://downloads.immortalwrt.org/releases/23.05.1/packages/x86_64/luci/Packages</a></p><p>固件格式选择：如果是X86架构软路由尽量选择 <code>EXT4</code>, 唯一缺点不能重置，如果有经常重置需求选择 <code>SQUASHFS</code> 格式</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/15/913065a1ba39c1298dfcbb0f90c731cf-a6df01f7.webp" alt="选择固件"></p><blockquote><p>❗ 不建议使用网上下载的第三方固件，无论其多么有名，都是基于上述源码编译而来，无法确保安全性和稳定性。</p><p>另外，不要太在意固件名称和皮肤样式。这些都可以在编译时自定义，不影响性能。OpenWrt 本身是命令行系统，默认黑色主题虽然简陋但非常稳定。 </p></blockquote><h2 id="OpenWrt-扩容"><a href="#OpenWrt-扩容" class="headerlink" title="OpenWrt  扩容"></a>OpenWrt  扩容</h2><h3 id="安装前直接扩容镜像（只有-squashfs-固件有效）："><a href="#安装前直接扩容镜像（只有-squashfs-固件有效）：" class="headerlink" title="安装前直接扩容镜像（只有 squashfs 固件有效）："></a>安装前直接扩容镜像（只有 squashfs 固件有效）：</h3><p>需在 Linux 系统中操作，例如 OpenWrt、Debian、Ubuntu 等。</p><p>检查是否具备所需依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> gzip</span><br><span class="line"><span class="built_in">which</span> <span class="built_in">dd</span></span><br><span class="line"><span class="built_in">which</span> parted</span><br></pre></td></tr></table></figure><ul><li><strong>Step1</strong>：把镜像上传至openwrt根目录（上传位置可以自己决定）</li><li><strong>Step2</strong>：按顺序执行以下命令(命令中的镜像名字根据自己实际填写，以 <code>immortalwrt.img</code> 为例）<a href="https://bulianglin.com/archives/openwrt.html">^1</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到根目录</span></span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 解压缩镜像文件</span></span><br><span class="line">gzip -kd immortalwrt.img.gz</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 解压成功后删除压缩包，方便后面选择文件</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 扩展镜像文件的大小 (count=500 表示增加 500MB 的空间)</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero bs=1M count=500 &gt;&gt; immortalwrt.img</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用分区工具操作镜像</span></span><br><span class="line">parted immortalwrt.img</span><br><span class="line"><span class="comment"># 查看分区情况</span></span><br><span class="line"><span class="built_in">print</span></span><br><span class="line"><span class="comment"># 调整分区大小 (将第 2 个分区扩展至镜像文件的 100%)</span></span><br><span class="line">resizepart 2 100%</span><br><span class="line"><span class="comment"># 查看是否扩展成功</span></span><br><span class="line"><span class="built_in">print</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 退出分区工具</span></span><br><span class="line">quit</span><br></pre></td></tr></table></figure><blockquote><p>⚠️ 若为 EFI 固件，在扩容过程中会弹出额外选项，请选择 <code>Ok</code> 并选择 <code>Fix</code>。 </p></blockquote><h3 id="安装后扩容镜像："><a href="#安装后扩容镜像：" class="headerlink" title="安装后扩容镜像："></a>安装后扩容镜像：</h3><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2025/07/15/6ec446b5faef68c4ecebda91f4fa1d01-bbcff145.webp" alt="Snipaste_2025-07-15_16-31-05"></p><h4 id="方法一：EXT4-格式-——-扩容系统根目录"><a href="#方法一：EXT4-格式-——-扩容系统根目录" class="headerlink" title="方法一：EXT4 格式 —— 扩容系统根目录"></a>方法一：EXT4 格式 —— 扩容系统根目录</h4><ol><li>更新软件商店；</li><li>安装 <code>diskman</code> 工具；</li><li>在挂载点设置中，禁用“自动挂载”选项；</li><li>创建一个 2GB 大小的新分区（根据需求调整大小），并将其格式化为 ext4 文件系统；</li><li>将新分区挂载为系统根目录；</li><li>复制提示的命令到记事本中，将命令中的 <code>/dev/sda1</code> 替换为实际的分区名称；</li><li>在 SSH 中执行替换后的命令，回车运行直到完成；</li><li>重启 openwrt；</li></ol><h4 id="方法二：SQUASHFS-格式-——-扩容-Overlay-分区"><a href="#方法二：SQUASHFS-格式-——-扩容-Overlay-分区" class="headerlink" title="方法二：SQUASHFS 格式 —— 扩容 Overlay 分区"></a>方法二：SQUASHFS 格式 —— 扩容 Overlay 分区</h4><ol><li>前四步与方法一类似；</li><li>将新分区挂载为&#x2F;mnt&#x2F;sda3 （目的是拷贝overlay文件用，sda3根据自己情况随意命名）</li><li>SSH连接openwrt后执行命令：<code>cp -r /overlay/* /mnt/sda3</code> （将原overlay下的配置拷贝至新分区）</li><li>查看新分区目录是否拷贝成功</li><li>删除刚刚的&#x2F;mnt&#x2F;sda3 挂载</li><li>将新分区重新挂载为overlay</li><li>重启 openwrt</li></ol><p>具体参考：<a href="https://www.qichiyu.com/183.html">openwrt基础配置 | openwrt固件选择、扩容、docker安装扩容、网络共享samba4安装配置</a></p><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p>通过安装各种插件，你可以轻松实现广告过滤、科学上网、远程访问等多种高级功能。</p><table><thead><tr><th align="center">apk命令</th><th align="center">opkg命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>apk update</code></td><td align="center"><code>opkg update</code></td><td align="center">刷新包源</td></tr><tr><td align="center"><code>apk add pkg</code></td><td align="center"><code>opkg install pkg</code></td><td align="center">安装指定包</td></tr><tr><td align="center"><code>apk del pkg</code></td><td align="center"><code>opkg remove pkg</code></td><td align="center">卸载指定包</td></tr></tbody></table><h2 id="官方-OpenWrt-设置"><a href="#官方-OpenWrt-设置" class="headerlink" title="官方 OpenWrt  设置"></a>官方 OpenWrt  设置</h2><h3 id="OpenWrt-的默认登录信息："><a href="#OpenWrt-的默认登录信息：" class="headerlink" title="OpenWrt 的默认登录信息："></a>OpenWrt 的默认登录信息：</h3><ul><li><p>地址：<code>http://192.168.1.1</code></p></li><li><p><strong>用户名</strong> : <code>root</code></p></li><li><p><strong>密码</strong> : <strong>未设置（首次登录不需要密码）</strong></p></li></ul><h3 id="openwrt-更换镜像源"><a href="#openwrt-更换镜像源" class="headerlink" title="openwrt 更换镜像源"></a>openwrt 更换镜像源</h3><p>用 ssh 工具连接 OpenWrt，随便输入下面的命令进行换源：</p><ol><li>中科大：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/downloads.openwrt.org/mirrors.ustc.edu.cn\/openwrt/g&#x27;</span> /etc/opkg/distfeeds.conf</span><br></pre></td></tr></table></figure><ol start="2"><li>清华源：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s_https\?://downloads.openwrt.org_https://mirrors.tuna.tsinghua.edu.cn/openwrt_&#x27;</span> /etc/opkg/distfeeds.conf</span><br></pre></td></tr></table></figure><h3 id="必备插件安装"><a href="#必备插件安装" class="headerlink" title="必备插件安装"></a>必备插件安装</h3><ol><li>汉化界面</li></ol><p><strong>24.10版本以后</strong>，汉化搜索安装下面三个插件即可；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">luci-i18n-base-zh-cn          # 最重要</span><br><span class="line">luci-i18n-firewall-zh-cn</span><br><span class="line">luci-i18n-package-manager-zh-cn</span><br></pre></td></tr></table></figure><ol start="2"><li><p><strong>SFTP</strong> 服务</p><p>安装 openssh-sftp-server 提供通过 SSH 加密通道进行安全文件传输（SFTP）的服务。</p></li><li><p>安装argon主题</p><p>参考：<a href="https://github.com/jerrykuku/luci-theme-argon/blob/master/README_ZH.md">luci-theme-argon&#x2F;README_ZH.md at master · jerrykuku&#x2F;luci-theme-argon</a></p></li></ol><h3 id="指定网关、DNS："><a href="#指定网关、DNS：" class="headerlink" title="指定网关、DNS："></a>指定网关、DNS：</h3><p><code>tag:proxy,3,192.168.10.2</code>：所有proxy标签的设备都分配网关为192.168.10.2</p><p><code>tag:proxy,6,192.168.10.2</code>：所有proxy标签的设备都分配DNS为192.168.10.2</p><h2 id="三方-ImmortalWrt-设置"><a href="#三方-ImmortalWrt-设置" class="headerlink" title="三方 ImmortalWrt 设置"></a>三方 ImmortalWrt 设置</h2><p>ImmortalWrt 的默认登录信息与 OpenWrt 类似；</p><h3 id="📦-必装插件（Luci-Apps-Themes）"><a href="#📦-必装插件（Luci-Apps-Themes）" class="headerlink" title="📦 必装插件（Luci Apps &amp; Themes）"></a>📦 必装插件（Luci Apps &amp; Themes）</h3><p>直接在<code>软件包</code>界面搜索下面插件安装即可，如果搜不到可以进行离线安装；</p><table><thead><tr><th align="center">插件名称</th><th align="center">功能简述</th><th align="center">用途说明</th></tr></thead><tbody><tr><td align="center"><code>luci-theme-argon</code></td><td align="center">Argon 主题皮肤</td><td align="center">提供美观现代的 Web 管理界面主题</td></tr><tr><td align="center"><code>luci-i18n-ttyd-zh-cn</code></td><td align="center">ttyd 的中文包</td><td align="center">支持浏览器终端服务界面显示为中文</td></tr><tr><td align="center"><code>luci-app-openclash</code></td><td align="center">OpenClash 客户端</td><td align="center">强大的科学上网图形化配置工具</td></tr><tr><td align="center"><code>luci-i18n-passwall-zh-cn</code></td><td align="center">PassWall 中文包</td><td align="center">网络代理</td></tr><tr><td align="center"><code>luci-i18n-homeproxy-zh-cn</code></td><td align="center">HomeProxy 中文包</td><td align="center">网络代理</td></tr></tbody></table><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2>]]></content>
    
    
    <summary type="html">本文介绍了 OpenWrt 的分类、选择、扩容及插件安装方法，并提供官方和 ImmortalWrt 的设置步骤，帮助用户快速搭建高效稳定的网络环境。</summary>
    
    
    
    <category term="技术教程" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="软路由" scheme="http://example.com/tags/%E8%BD%AF%E8%B7%AF%E7%94%B1/"/>
    
    <category term="网络代理" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/"/>
    
    <category term="OpenWrt" scheme="http://example.com/tags/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title>申请US.KG永久免费域名，支持Cloudflare托管与无限期续期！</title>
    <link href="http://example.com/2024/12/15/%E7%94%B3%E8%AF%B7US.KG%E6%B0%B8%E4%B9%85%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%EF%BC%8C%E6%94%AF%E6%8C%81Cloudflare%E6%89%98%E7%AE%A1%E4%B8%8E%E6%97%A0%E9%99%90%E6%9C%9F%E7%BB%AD%E6%9C%9F%EF%BC%81/"/>
    <id>http://example.com/2024/12/15/%E7%94%B3%E8%AF%B7US.KG%E6%B0%B8%E4%B9%85%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%EF%BC%8C%E6%94%AF%E6%8C%81Cloudflare%E6%89%98%E7%AE%A1%E4%B8%8E%E6%97%A0%E9%99%90%E6%9C%9F%E7%BB%AD%E6%9C%9F%EF%BC%81/</id>
    <published>2024-12-15T13:05:00.000Z</published>
    <updated>2025-07-24T16:13:09.403Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe width="560" height="315" src="https://www.youtube.com/embed/YHQDFQduNDU?si=Lcevjjt9CSPCSgx-" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h2 id="1、注册海外虚拟身份"><a href="#1、注册海外虚拟身份" class="headerlink" title="1、注册海外虚拟身份"></a>1、注册海外虚拟身份</h2><p>首选你需要准备一个海外的虚拟身份信息 【<a href="https://www.fakepersongenerator.com/"><strong>点击获取</strong></a>】</p><p>进入以后，可以自由获取一个虚拟的海外身份信息，比如地址、电话号码等，一会要用到</p><h2 id="2、注册海外虚拟身份"><a href="#2、注册海外虚拟身份" class="headerlink" title="2、注册海外虚拟身份"></a>2、注册海外虚拟身份</h2><p>在 US.KG 官网查看可免费注册的域名【<a href="https://nic.us.kg/"><strong>链接直达</strong></a>】</p><h2 id="3、使用您的-GitHub-帐户进行-KYC"><a href="#3、使用您的-GitHub-帐户进行-KYC" class="headerlink" title="3、使用您的 GitHub 帐户进行 KYC"></a>3、使用您的 GitHub 帐户进行 KYC</h2><p>准备好一个Github账号，如果没有的话可以自行免费注册一个【<a href="https://github.com/"><strong>点击前往</strong></a> 】</p><h2 id="4、托管在-Cloudflare"><a href="#4、托管在-Cloudflare" class="headerlink" title="4、托管在 Cloudflare"></a>4、托管在 Cloudflare</h2><p>最后托管在 <a href="https://www.cloudflare.com/">Cloudflare</a> 域名管理平台就可以免费使用了，域名虽然是1年有效期，但是在到期前180天去免费续期下，就可以一直永久免费使用！</p><p><strong>参考视频</strong>：<a href="https://www.bilibili.com/video/BV1AjiBYVEoF/?spm_id_from=333.337.search-card.all.click&vd_source=7bff20db0211932c8f96b4f2babd670c">https://www.bilibili.com/video/BV1AjiBYVEoF/?spm_id_from=333.337.search-card.all.click&amp;vd_source=7bff20db0211932c8f96b4f2babd670c</a></p>]]></content>
    
    
    <summary type="html">手把手教你如何注册免费的域名。</summary>
    
    
    
    <category term="技术教程" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="网站搭建" scheme="http://example.com/tags/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    <category term="免费域名" scheme="http://example.com/tags/%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>凡人总是能带人惊喜</title>
    <link href="http://example.com/2024/05/10/%E5%87%A1%E4%BA%BA%E6%80%BB%E6%98%AF%E8%83%BD%E5%B8%A6%E4%BA%BA%E6%83%8A%E5%96%9C/"/>
    <id>http://example.com/2024/05/10/%E5%87%A1%E4%BA%BA%E6%80%BB%E6%98%AF%E8%83%BD%E5%B8%A6%E4%BA%BA%E6%83%8A%E5%96%9C/</id>
    <published>2024-05-10T06:30:00.000Z</published>
    <updated>2025-07-28T13:04:12.840Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong>：生命的篇章，伴随着初生的啼哭缓缓展开，浮浮沉沉几十年，最终在一声悠长的叹息中画上句点，在亲友的泪光中静静告别。</p><p>看过这么多修仙题材的动漫，凡人绝对是最优秀的一部作品。“以凡尘心入世，在苦海历劫轮回，初心不改，只为求索大道。“凡人真的做到了。</p><p>从2020年朋友推荐一直看到如今的86集，看的出来，凡人一直在进步，尤其是第86集的文戏，堪称巅峰。尽管看完有好几周了，今天又忍不住又重新刷了一遍，先贴上一段剧中人物对白：</p><blockquote><p>吾幼时好棋，名镇乡野，人皆谓神童。年岁稍长，遇一山野老道，三天对弈，终得一胜。老道愿赌服输，施展法术，通天遁地，吾顿生神往，遂弃棋修道。</p><p>可惜吾天赋一般，只求矜矜业业苦心钻研，不惜远家人，抛爱侣，弃友人，漂泊四海，无所依绊，几经险境，半生贫苦，老来方有定所，可惜时日无多。</p><p>近来常思，人生百年，蜉蝣一日，长生于我何有哉，不过又入樊笼尔，不若二三好友，弈棋饮酒，良缘佳侣，人间携手，风光百年，同归尘土。</p><p>但，问道之心，终归难改，纵使蹉跎一生，也要争那一线天机。只因幼时便知，人生如棋，落子无悔！ ——选自86集何仙师语录</p></blockquote><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F05%2F10%2F393b9068846fcc1b7012ef0748dc9761-13602638.webp" alt="图1"></p><p>尤其是何仙师的这句“<strong>近来常思，人生百年，蜉蝣一日，长生于我何有哉，不过又入樊笼尔，不若二三好友，弈棋饮酒，良缘佳侣，人间携手，风光百年，同归尘土</strong>。”道出了芸芸众生幸福观的终极形态。</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F05%2F10%2Fdffbb97019de196905fbfa1445049350-3c0db5e2.webp" alt="图2"></p><p>水墨画风再加上配音配乐的渲染，本集看完，感概颇深，正所谓“人生一世，草木一秋；大道茫茫，求索白头。”你我皆凡人，在有限的寿元里，如果有什么想做的，就大胆的去做吧。</p><p><img src="https://blog-pictures-bucket.oss-cn-beijing.aliyuncs.com/typora-tu-chuang/2024%2F05%2F10%2F0a5cf746426fdfbd9ba12b297990e7c2-15b9e7ac.webp" alt="图3"></p><p>现如今欣赏凡人修仙传，已经不再单纯觉得这只是一部普通的动漫了，而是把它当成一件艺术品来欣赏。</p><p>我喜欢看凡人的每分每秒。</p><p>它几乎成为了我每周的快乐源泉。</p><p>来首凡人的片尾曲助助兴吧！一起念头通达。</p><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="500" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1465290469&amp;auto=0&amp;height=66"></iframe></center><p>祝愿凡人动漫越做越好！🎉🎉🎉</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;：生命的篇章，伴随着初生的啼哭缓缓展开，浮浮沉沉几十年，最终在一声悠长的叹息中画上句点，在亲友的泪光中静静告别。&lt;/p&gt;
&lt;p&gt;看过这么多修仙题材的动漫，凡人绝对是最优秀的一部作品。“以凡尘心入世，在苦海历劫轮回，初心不改，只为求索大道</summary>
        
      
    
    
    
    <category term="影评书评" scheme="http://example.com/categories/%E5%BD%B1%E8%AF%84%E4%B9%A6%E8%AF%84/"/>
    
    
    <category term="番剧" scheme="http://example.com/tags/%E7%95%AA%E5%89%A7/"/>
    
  </entry>
  
</feed>
